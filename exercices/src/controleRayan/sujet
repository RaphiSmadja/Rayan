Exercice 1 : Moyenne d'un tableau

Écrivez un programme Java qui calcule la moyenne des éléments d'un tableau d'entiers. Utilisez une boucle pour parcourir le tableau et une variable pour stocker la somme totale des éléments. Ensuite, divisez la somme par le nombre d'éléments pour obtenir la moyenne.

Exercice 2 : Recherche d'élément

Écrivez un programme qui recherche un élément donné dans un tableau d'entiers. Si l'élément est trouvé, affichez son indice. Si l'élément n'est pas présent, affichez un message indiquant qu'il n'a pas été trouvé.

Exercice 3 : Filtre de tableau

Écrivez un programme qui filtre les éléments pairs d'un tableau d'entiers et les stocke dans un nouveau tableau. Ensuite, affichez le nouveau tableau contenant uniquement les éléments pairs.

Exercice 4 : Compter les occurrences

Écrivez un programme qui compte combien de fois un élément particulier apparaît dans un tableau d'entiers. Affichez le nombre d'occurrences de cet élément.

Exercice 5 : Inversion d'un tableau

Écrivez un programme qui inverse les éléments d'un tableau d'entiers. Par exemple, si le tableau est [1, 2, 3, 4], le programme devrait le transformer en [4, 3, 2, 1].

Exercice 6 : Palindrome

Écrivez un programme qui vérifie si une chaîne de caractères est un palindrome. Un palindrome est une séquence de caractères qui se lit de la même manière de gauche à droite et de droite à gauche. Par exemple, "radar" est un palindrome.

Exercice 7 : Tri de tableau

Écrivez un programme qui trie un tableau d'entiers dans l'ordre croissant en utilisant l'algorithme de tri à bulles ou un autre algorithme de tri de votre choix.

Ces exercices vous permettront de pratiquer l'utilisation de boucles, de conditions et de collections en Java. N'hésitez pas à demander de l'aide si vous en avez besoin ou si vous avez des questions sur l'un de ces exercices !

/********************************************************/

Exercice 1 : Recherche d'un élément dans un tableau
Écrivez une méthode en Java pour rechercher la présence d'un élément dans un tableau et retourner l'index de cet élément s'il est trouvé, sinon retourner -1.

Exercice 2 : Calcul de la somme des éléments d'un tableau

Exercice 3 : Compter le nombre d'occurrences d'un caractère dans une chaîne
             Écrivez une méthode pour compter le nombre d'occurrences d'un caractère donné dans une chaîne.




Titre du Projet : Jeu du Cowboy - Duel en Java

Description :

Vous allez développer un jeu de duel de cowboys en utilisant Java.
Le jeu se déroule entre plusieurs joueurs qui doivent s'éliminer les uns les autres en utilisant des actions spécifiques telles que "Tirer", "Recharger" ou "Bouclier".

Fonctionnalités attendues :

Classe Joueur :

Un joueur possède un nombre de vies.
Il peut cumuler un nombre défini de balles pour son pistolet.
Le joueur peut perdre une vie ou une balle en fonction de ses actions.
Classe JeuDuCowboy :

Gère le déroulement du jeu.
Gère les interactions entre les différents joueurs.
Détermine le gagnant ou les gagnants à la fin du jeu.
Règles du jeu :

Chaque joueur commence avec un nombre défini de vies (par exemple, 3).
Chaque joueur commence avec une seule balle pour son pistolet.
Les joueurs ont le choix entre les actions "Tirer", "Recharger" ou "Bouclier" à chaque tour.
Si un joueur tire sur un adversaire qui n'utilise pas de "Bouclier", l'adversaire perd une vie.
Si deux joueurs se tirent dessus simultanément, les deux perdent une vie.
Si un joueur utilise un "Bouclier", il est protégé contre un tir adverse.
Instructions :

Implémentez la classe Joueur avec ses attributs, méthodes et actions disponibles pour chaque joueur.
Implémentez la classe JeuDuCowboy pour gérer le déroulement du jeu, les interactions entre les joueurs et déterminer les vainqueurs.
Testez le jeu avec un nombre défini de joueurs pour vérifier son bon fonctionnement.
Contraintes :

Utilisez la programmation orientée objet (POO) en Java pour implémenter ce jeu.
Gérez correctement les interactions entre les joueurs pour respecter les règles du jeu.
Cet exercice permettra à vos élèves de mettre en pratique les concepts de la POO en Java en développant un jeu amusant où ils pourront implémenter des règles spécifiques et gérer les interactions entre les joueurs.